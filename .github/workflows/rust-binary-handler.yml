name: Build and archive rust binary - handler

permissions:
      id-token: write
      contents: read

on:
  workflow_dispatch:

env:
  BIN_NAME: 'handler'
  SOURCE_PATH: 'azure/functions/rust'
  RUST_BACKTRACE: 'full'
  CARGO_TARGET: 'x86_64-unknown-linux-gnu'
  
jobs:
  validate_and_push:
    # Azure functions does not yet support openssl.3
    #  ubuntu-latest uses openssl.3 so we need to 
    #  downgrade runner to 20.04.
    runs-on: ubuntu-20.04
    steps:
    # Variables
    - name: 'Show variables'
      run: |
        echo BIN_NAME : ${{ env.BIN_NAME }} 
        echo SOURCE_PATH : ${{ env.SOURCE_PATH }} 

    # Checkout
    - name: 'Checkout repository branch'
      uses: actions/checkout@v2                 
    
    # Update / Install Rust
    - name: 'Update / install rust'
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ env.CARGO_TARGET }}
        toolchain: stable
        default: true
        override: true

    # Cache
    - name: 'Cache cargo target dir'
      id: cache_nxfutil
      uses: actions/cache@v3
      with:
        path: '${{ env.SOURCE_PATH }}/target'
        key: 'cargo-target-${{ env.BIN_NAME }}'

    # Build
    - name: 'Build binary'
      shell: bash
      run: |       
        pushd '${{ env.SOURCE_PATH }}'
        cargo build --target "${{ env.CARGO_TARGET }}" --release
        popd

    # Archive
    - name: Archive binary
      uses: actions/upload-artifact@v3
      with:
        name: '${{ env.BIN_NAME }}'
        path: '${{ env.SOURCE_PATH }}/target/${{ env.CARGO_TARGET }}/release/${{ env.BIN_NAME }}'