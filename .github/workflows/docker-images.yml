name: Build and push Docker images

on:
  workflow_call:
    inputs:
      AZURE_KEYVAULT_NAME:
        type: string
        description: 'Azure Key Vault name'
        required: true

env:
  DOCKER_IMAGES_PATH: './docker/images'
  
jobs:
  validate_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout repository branch'
      uses: actions/checkout@v2

    - name: 'Show inputs'
      run: |
        echo AZURE_KEYVAULT_NAME : ${{ inputs.AZURE_KEYVAULT_NAME }}

    - name: 'Show variables'
      run: |
        echo DOCKER_IMAGES_PATH : ${{ env.DOCKER_IMAGES_PATH }}  

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}                
    
    # - name: 'Get secrets from Key Vault' 
    #   id: keyVaultSecrets
    #   uses: Azure/get-keyvault-secrets@v1
    #   with: 
    #     keyvault: ${{ env.AZURE_KEYVAULT_NAME }}
    #     secrets: 'azure-registry-server, azure-registry-username, azure-registry-password'

    # - name: 'Login to Container Registry'
    #   uses: azure/docker-login@v1
    #   with:
    #     login-server: ${{ steps.keyVaultSecrets.outputs.azure-registry-server }}
    #     username: ${{ steps.keyVaultSecrets.outputs.azure-registry-username }}
    #     password: ${{ steps.keyVaultSecrets.outputs.azure-registry-password }}

    # - name: 'Build and push images'
    #   shell: bash
    #   run: |
    #     pushd './${{ env.DOCKER_IMAGES_PATH }}'
        
    #     pushd ubuntu
    #     docker build -f Dockerfile . -t ${{ steps.keyVaultSecrets.outputs.azure-registry-server }}/default/ubuntu:${{ github.sha }}
    #     docker push ${{ steps.keyVaultSecrets.outputs.azure-registry-server }}/default/ubuntu:${{ github.sha }}
    #     popd

    #     pushd nextflow
    #     docker build -f Dockerfile . -t ${{ steps.keyVaultSecrets.outputs.azure-registry-server }}/default/nextflow:${{ github.sha }}
    #     docker push ${{ steps.keyVaultSecrets.outputs.azure-registry-server }}/default/nextflow:${{ github.sha }}
    #     popd

    #     popd

    # Azure logout
    - name: logout
      run: |
        az logout
      if: always()