name: Build and deploy Azure templates

on: 
  workflow_call:
    inputs:
      AZURE_LOCATION: 
        type: string
        description: 'Azure region name'
        required: true
        default: 'australiaeast'
      AZURE_SUBSCRIPTION_ID:
        type: string
        description: 'Azure subscription id'
        required: true   

env:
  AZURE_LOCATION: ${{ github.event.inputs.AZURE_LOCATION }}
  AZURE_SUBSCRIPTION_ID: ${{ github.event.inputs.AZURE_SUBSCRIPTION_ID }}
  BICEP_FILE_PATH: './azure/templates'
  BICEP_FILE_NAME: 'main'
  BICEP_OUTPUT_DIRECTORY: './azure/templates/builds'
  GITHUB_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}

jobs:
  validate_and_deploy:
    runs-on: ubuntu-latest 
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Checkout
    - name: 'Checkout repository branch'
      uses: actions/checkout@v1

    # Broken
    - name: 'creds'
      run: |
        objectId=$(az ad sp list --spn "967269a3-c73b-4389-b0fd-8306908aa9e0" --query "[].objectId" --output tsv)
        echo objectId is $objectId
      shell: bash

    - name: 'creds'
      run: |
        clientId=$(echo "$SSH_KEY" | jq -r .clientId)
        echo clientId is $clientId
        objectId=$(az ad sp list --spn "$clientId" --query "[].objectId" --output tsv)
        echo objectId is $objectId
      shell: bash
      env:
        SSH_KEY: ${{ secrets.AZURE_CREDENTIALS }}      

    - name: 'creds.clientId'
      run: |
        clientId=$(echo "$SSH_KEY")
        echo clientId is $clientId   
        objectId=$(az ad sp list --spn "$clientId" --query "[].objectId" --output tsv)
        echo objectId is $objectId
      shell: bash
      env:
        SSH_KEY: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}     

    # Get objectId from clientId
    - name: 'Get principal from clientId'
      id: gitHubMsiPrincipal
      run: |
        objectId=$(az ad sp list --spn "$CLIENT_ID" --query "[].objectId" --output tsv)
        echo clientId is $CLIENT_ID
        echo objectId is $objectId
        echo "::set-output name=objectId::$objectId"
      env: 
        CLIENT_ID: ${{ env.GITHUB_CLIENT_ID }}

    # Build ARM Template from Bicep
    - name: Azure CLI - Validate Bicep file ${{ env.BICEP_FILE_PATH }}/${{ env.BICEP_FILE_NAME }}.bicep
      uses: Azure/cli@1.0.4
      with:
        inlineScript: |
          mkdir -p ${{ env.BICEP_OUTPUT_DIRECTORY }}
          az deployment sub validate --name ${{ github.run_number }} --location ${{ env.AZURE_LOCATION }} --subscription ${{ env.AZURE_SUBSCRIPTION_ID }} --template-file ${{ env.BICEP_FILE_PATH }}/${{ env.BICEP_FILE_NAME }}.bicep --parameters gitHubMsiClientId=${{ steps.gitHubMsiPrincipal.outputs.objectId }}
          az bicep upgrade 
          az bicep build --file ${{ env.BICEP_FILE_PATH }}/${{ env.BICEP_FILE_NAME }}.bicep --outdir ${{ env.BICEP_OUTPUT_DIRECTORY }}
    
    # Deployment Bicep template
    - name: Deploy infrastructure
      id: azureResources
      uses: azure/arm-deploy@v1
      with:
        scope: subscription
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        region: ${{ env.AZURE_LOCATION }} 
        deploymentName: ${{ github.run_number }}
        template: ${{ env.BICEP_OUTPUT_DIRECTORY }}/${{ env.BICEP_FILE_NAME }}.json
        parameters: gitHubMsiClientId=${{ steps.gitHubMsiPrincipal.outputs.objectId }}

    # Azure logout
    - name: logout
      run: |
        az logout
      if: always()

    outputs:
      AZURE_KEYVAULT_NAME: ${{ steps.azureResources.outputs.NXFUTIL_AZ_KV_NAME }} 